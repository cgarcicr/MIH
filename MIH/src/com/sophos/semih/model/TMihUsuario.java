package com.sophos.semih.model;

// Generated 9/10/2013 04:13:43 PM by Hibernate Tools 4.0.0

import java.io.Serializable;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionBindingListener;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * TMihUsuario generated by hbm2java
 */
@Entity
@Table(name = "T_MIH_USUARIO")
public class TMihUsuario implements Serializable, HttpSessionBindingListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 5998488003153435203L;
	private Integer codigo;
	private TMihLineanegocio TMihLineanegocio;
	private TMihRol TMihRol;
	private String codigoempleado;
	private String nombres;
	private String apellidos;
	private Integer tipodocumento;
	private String numerodocumento;
	private Integer empresa;
	private Integer cargo;
	private String area;
	private Character estado;
	private Character admusuario;
	private Character parametros;
	private Character entidades;
	private Character carga;
	private Character consultapuntual;
	private Character consultamasiva;
	private Character auditoria;
	private Character depuracion;
	private Date feregistro;
	private Character autorizar;
	private Date femodificacion;
	private Date feeliminacion;
	private Set<TMihEntxusr> TMihEntxusrs = new HashSet<TMihEntxusr>(0);
	private static Map<String, HttpSession> usersSessions = new HashMap<String, HttpSession>();
	private static final Log log = LogFactory.getLog(TMihUsuario.class);

	public TMihUsuario() {
	}

//	public TMihUsuario(Integer codigo, String nombres, String apellidos, Integer cargo,
//			String area) {
//		this.codigo = codigo;
//		this.nombres = nombres;
//		this.apellidos = apellidos;
//		this.cargo = cargo;
//		this.area = area;
//	}

	public TMihUsuario(Integer codigo, TMihLineanegocio TMihLineanegocio,
			TMihRol TMihRol, String codigoempleado, String nombres,
			String apellidos, Integer tipodocumento, String numerodocumento,
			Integer empresa, Integer cargo, String area, Character estado,
			Character admusuario, Character parametros, Character entidades,
			Character carga, Character consultapuntual,
			Character consultamasiva, Character auditoria,
			Character depuracion, Date feregistro, Character autorizar,
			Date femodificacion, Date feeliminacion, Set<TMihEntxusr> TMihEntxusrs
			) {
		this.codigo = codigo;
		this.TMihLineanegocio = TMihLineanegocio;
		this.TMihRol = TMihRol;
		this.codigoempleado = codigoempleado;
		this.nombres = nombres;
		this.apellidos = apellidos;
		this.tipodocumento = tipodocumento;
		this.numerodocumento = numerodocumento;
		this.empresa = empresa;
		this.cargo = cargo;
		this.area = area;
		this.estado = estado;
		this.admusuario = admusuario;
		this.parametros = parametros;
		this.entidades = entidades;
		this.carga = carga;
		this.consultapuntual = consultapuntual;
		this.consultamasiva = consultamasiva;
		this.auditoria = auditoria;
		this.depuracion = depuracion;
		this.feregistro = feregistro;
		this.autorizar = autorizar;
		this.femodificacion = femodificacion;
		this.feeliminacion = feeliminacion;
		this.TMihEntxusrs = TMihEntxusrs;
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false, precision = 8, scale = 0)
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CODLINEANEGOCIO")
	public TMihLineanegocio getTMihLineanegocio() {
		return this.TMihLineanegocio;
	}

	public void setTMihLineanegocio(TMihLineanegocio TMihLineanegocio) {
		this.TMihLineanegocio = TMihLineanegocio;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CODROL")
	public TMihRol getTMihRol() {
		return this.TMihRol;
	}

	public void setTMihRol(TMihRol TMihRol) {
		this.TMihRol = TMihRol;
	}

	@Column(name = "CODIGOEMPLEADO", length = 80)
	public String getCodigoempleado() {
		return this.codigoempleado;
	}

	public void setCodigoempleado(String codigoempleado) {
		this.codigoempleado = codigoempleado;
	}

	@Column(name = "NOMBRES", nullable = false, length = 160)
	public String getNombres() {
		return this.nombres;
	}

	public void setNombres(String nombres) {
		this.nombres = nombres;
	}

	@Column(name = "APELLIDOS", nullable = false, length = 160)
	public String getApellidos() {
		return this.apellidos;
	}

	public void setApellidos(String apellidos) {
		this.apellidos = apellidos;
	}

	@Column(name = "TIPODOCUMENTO", precision = 8, scale = 0)
	public Integer getTipodocumento() {
		return this.tipodocumento;
	}

	public void setTipodocumento(Integer tipodocumento) {
		this.tipodocumento = tipodocumento;
	}

	@Column(name = "NUMERODOCUMENTO", nullable = false, length = 80)
	public String getNumerodocumento() {
		return this.numerodocumento;
	}

	public void setNumerodocumento(String numerodocumento) {
		this.numerodocumento = numerodocumento;
	}

	@Column(name = "EMPRESA", precision = 8, scale = 0)
	public Integer getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Integer empresa) {
		this.empresa = empresa;
	}

	@Column(name = "CARGO", nullable = false, precision = 8, scale = 0)
	public Integer getCargo() {
		return this.cargo;
	}

	public void setCargo(Integer cargo) {
		this.cargo = cargo;
	}

	@Column(name = "AREA", nullable = false, length = 160)
	public String getArea() {
		return this.area;
	}

	public void setArea(String area) {
		this.area = area;
	}

	@Column(name = "ESTADO", length = 1)
	public Character getEstado() {
		return this.estado;
	}

	public void setEstado(Character estado) {
		this.estado = estado;
	}

	@Column(name = "ADMUSUARIO", length = 1)
	public Character getAdmusuario() {
		return this.admusuario;
	}

	public void setAdmusuario(Character admusuario) {
		this.admusuario = admusuario;
	}

	@Column(name = "PARAMETROS", length = 1)
	public Character getParametros() {
		return this.parametros;
	}

	public void setParametros(Character parametros) {
		this.parametros = parametros;
	}

	@Column(name = "ENTIDADES", length = 1)
	public Character getEntidades() {
		return this.entidades;
	}

	public void setEntidades(Character entidades) {
		this.entidades = entidades;
	}

	@Column(name = "CARGA", length = 1)
	public Character getCarga() {
		return this.carga;
	}

	public void setCarga(Character carga) {
		this.carga = carga;
	}

	@Column(name = "CONSULTAPUNTUAL", length = 1)
	public Character getConsultapuntual() {
		return this.consultapuntual;
	}

	public void setConsultapuntual(Character consultapuntual) {
		this.consultapuntual = consultapuntual;
	}

	@Column(name = "CONSULTAMASIVA", length = 1)
	public Character getConsultamasiva() {
		return this.consultamasiva;
	}

	public void setConsultamasiva(Character consultamasiva) {
		this.consultamasiva = consultamasiva;
	}

	@Column(name = "AUDITORIA", length = 1)
	public Character getAuditoria() {
		return this.auditoria;
	}

	public void setAuditoria(Character auditoria) {
		this.auditoria = auditoria;
	}

	@Column(name = "DEPURACION", length = 1)
	public Character getDepuracion() {
		return this.depuracion;
	}

	public void setDepuracion(Character depuracion) {
		this.depuracion = depuracion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FEREGISTRO", length = 7)
	public Date getFeregistro() {
		return this.feregistro;
	}

	public void setFeregistro(Date feregistro) {
		this.feregistro = feregistro;
	}

	@Column(name = "AUTORIZAR", length = 1)
	public Character getAutorizar() {
		return this.autorizar;
	}

	public void setAutorizar(Character autorizar) {
		this.autorizar = autorizar;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FEMODIFICACION", length = 7)
	public Date getFemodificacion() {
		return this.femodificacion;
	}

	public void setFemodificacion(Date femodificacion) {
		this.femodificacion = femodificacion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FEELIMINACION", length = 7)
	public Date getFeeliminacion() {
		return this.feeliminacion;
	}

	public void setFeeliminacion(Date feeliminacion) {
		this.feeliminacion = feeliminacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TMihUsuario")
	public Set<TMihEntxusr> getTMihEntxusrs() {
		return this.TMihEntxusrs;
	}

	public void setTMihEntxusrs(Set<TMihEntxusr> TMihEntxusrs) {
		this.TMihEntxusrs = TMihEntxusrs;
	}

	public static Map<String, HttpSession> getUsersSessions() {
		return usersSessions;
	}

	public static void setUsersSessions(Map<String, HttpSession> usersSessions) {
		TMihUsuario.usersSessions = usersSessions;
	}

	@Override
	public void valueBound(HttpSessionBindingEvent event) {
		if(usersSessions.containsKey(this.getCodigoempleado())){
			usersSessions.get(this.getCodigoempleado()).invalidate();
		}
		usersSessions.put(this.getCodigoempleado(), event.getSession());
	}

	@Override
	public void valueUnbound(HttpSessionBindingEvent event) {
		usersSessions.remove(this.getCodigoempleado());
	}

	
	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		try {
			return getCodigoempleado();
		} catch (Exception e) {
			log.error("Error en toString()", e);
		}
		return null;
	}
	
}
